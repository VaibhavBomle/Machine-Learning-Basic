# -*- coding: utf-8 -*-
"""MatrixOperationInPython.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YAhUu9b_s6RCy9oX3F0msJ32HhCVrRvb
"""

# Import Numpy Library
import numpy as np

"""**Matrix Addition**

Two Matrices can be added only if they have the same shape
"""

# Creating two matrices

A = np.array([[2,3],[4,5]])

B = np.array([[6,7],[8,9]])

print(A)

print(B)

A.shape

B.shape

"""Adding the two matrices"""

sum = A + B

print(sum)

# Create two matrices with random values
matrix_1 = np.random.randint(10,size = (3,3))
matrix_2 = np.random.randint(10,size = (3,3))

print(matrix_1)
print(matrix_2)

sum = np.add(matrix_1,matrix_2)

print(sum)

# Create two matrices with random values
matrix_3 = np.random.randint(10,size = (3,3))
matrix_4 = np.random.randint(10,size = (3,4))

sum2 = np.add(matrix_3,matrix_4)

"""We get this error because shape of matrix_3 and matrix_4 are different

Matrix Substraction
"""

# Creating two matrices

A = np.array([[2,3],[4,5]])

B = np.array([[6,7],[8,9]])

print(A)

print(B)

defference = A -B

print(defference)

diff = np.subtract(A,B)

print(diff)

matrix_1 = np.random.randint(10,size = (3,3))
matrix_2 = np.random.randint(10,size = (3,3))

print(matrix_1)

print(matrix_2)

diff = np.subtract(matrix_1,matrix_2)

print(diff)

"""**Multiplying a matrix by scalar**"""

x = 5
y = np.random.randint(10,size=(4,4))

print(y)

product = np.multiply(x,y)

print(product)

"""**Multiplying 2 Matrices**"""

# Create two matrices with random values
matrix_3 = np.random.randint(10,size = (3,3))
matrix_4 = np.random.randint(10,size = (3,4))

print(matrix_3)

print(matrix_4)

product = np.dot(matrix_3,matrix_4)

print(product)

print(product.shape)

# Create two matrices with random values
matrix_3 = np.random.randint(10,size = (3,3))
matrix_4 = np.random.randint(10,size = (4,4))

product = np.dot(matrix_3,matrix_4)

"""**Element wise Matrices Multiplication**"""

# Create two matrices with random values
matrix_3 = np.random.randint(10,size = (3,3))
matrix_4 = np.random.randint(10,size = (3,3))

print(matrix_3)

print(matrix_4)

product = np.multiply(matrix_3,matrix_4)

print(product)