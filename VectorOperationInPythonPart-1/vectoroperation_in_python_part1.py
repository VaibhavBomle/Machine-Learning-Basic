# -*- coding: utf-8 -*-
"""VectorOperation-In-Pythin-Part1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nR9HTA71Og6iJrNeFt6tCIfkvAjURrCH
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

sns.set()

"""Ploatting a Vector"""

plt.quiver(0,0,4,5)
plt.show()

plt.quiver(0,0,4,5,scale_units = 'xy', angles = 'xy' , scale =1)
plt.xlim(-8,8)
plt.ylim(-8,8)
plt.show()

plt.quiver(0,0,4,5,scale_units = 'xy', angles = 'xy' , scale =1,color = 'b')
plt.xlim(-8,8)
plt.ylim(-8,8)
plt.show()

plt.quiver(0,0,4,5,scale_units = 'xy', angles = 'xy' , scale =1,color = 'b')
plt.quiver(0,0,-3,-6,scale_units = 'xy', angles = 'xy' , scale =1,color = 'y')
plt.xlim(-8,8)
plt.ylim(-8,8)
plt.show()

"""Addition of two vectors"""

vector_1 = np.asarray([0,0,2,3])
vector_2 = np.asarray([0,0,3,-2])
sum = vector_1 + vector_2
print(sum)

plt.quiver(0,0,2,3,scale_units = 'xy', angles = 'xy' , scale =1,color = 'b')
plt.quiver(0,0,3,-2,scale_units = 'xy', angles = 'xy' , scale =1,color = 'y')
plt.quiver(0,0,5,1,scale_units = 'xy', angles = 'xy' , scale =1,color = 'r')
plt.xlim(-8,8)
plt.ylim(-8,8)
plt.show()

"""Substraction of two Vectors"""

vector_1 = np.asarray([0,0,2,3])
vector_2 = np.asarray([0,0,3,-2])
difference = vector_1 - vector_2
print(difference)

plt.quiver(0,0,2,3,scale_units = 'xy', angles = 'xy' , scale =1,color = 'b')
plt.quiver(0,0,3,-2,scale_units = 'xy', angles = 'xy' , scale =1,color = 'y')
plt.quiver(0,0,-1,5,scale_units = 'xy', angles = 'xy' , scale =1,color = 'r')
plt.xlim(-8,8)
plt.ylim(-8,8)
plt.show()

"""Multiplying a vector by as scalar"""

vector_1 = np.asarray([0,0,2,3])
vector_2 = 2 * vector_1
print(vector_2)

plt.quiver(0,0,2,3,scale_units = 'xy', angles = 'xy' , scale =1,color = 'b')
plt.quiver(0,0,4,6,scale_units = 'xy', angles = 'xy' , scale =1,color = 'y')
plt.xlim(-8,8)
plt.ylim(-8,8)
plt.show()

vector_1 = np.asarray([0,0,2,3])
vector_2 = -0.5 * vector_1
print(vector_2)

plt.quiver(0,0,2,3,scale_units = 'xy', angles = 'xy' , scale =1,color = 'b')
plt.quiver(0,0,-1,-1.5,scale_units = 'xy', angles = 'xy' , scale =1,color = 'y')
plt.xlim(-8,8)
plt.ylim(-8,8)
plt.show()